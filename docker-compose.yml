version: '3.7'

volumes:
  database:
    name: traccar_database
secrets:
  traccar_xml:
    name: traccar_xml
    file: ./traccar_mysql_with_password.xml
  mysql_root_password:
    name: mysql_root_password
    file: ./mysql_root_password
  mysql_user_password:
    name: mysql_user_password
    file: ./mysql_user_password
networks:
  proxy_net:
    name: proxy_net
    external: true
  mysql_net:
    name: traccar_mysql_net

services:
  traccar:
    image: wildsong/traccar:latest
    build:
      context: .
      dockerfile: Dockerfile.traccar
    environment:
      VIRTUAL_HOST: traccar.wildsong.biz
      VIRTUAL_PORT: 8082
      LETSENCRYPT_HOST: traccar.wildsong.biz
      LETSENCRYPT_MAIL: brian@wildsong.biz
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "8082:8082"     # Port 8082 is defined in traccar.xml
      - "5055:5055"     # cellphones
      - "5055:5055/udp" # cellphones
    networks:
      - proxy_net
      - mysql_net

    # Read the secrets file instead of conf/traccar.xml
    secrets:
      - traccar_xml
    command: ["-jar", "tracker-server.jar", "/run/secrets/traccar_xml"]

    deploy:
      mode: global
      update_config:
        order: 'stop-first'
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 30s


  # Only traccar needs to see port 3306 and
  # that's visible already on traccar_net
  # so I don't need 'ports' or 'expose'
  # 
  # NB Hostname for traccar service will be "mysql". (Sort of painfully obvious now.)
  mysql:
    image: "mysql:5.6.30"
    secrets:
      - mysql_root_password
      - mysql_user_password
    environment:
      # see also mysql.env
      MYSQL_DATABASE: traccar_database
      MYSQL_USER: traccar_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    volumes:
      - database:/var/lib/mysql
    networks:
      - mysql_net
    deploy:
      mode: global
      update_config:
        order: 'stop-first'
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
